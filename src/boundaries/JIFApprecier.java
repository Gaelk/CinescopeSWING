/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boundaries;

import connexion.Connexion;
import daos.AppreciationDAO;
import daos.ApprecierDAO;
import daos.FilmDAO;
import daos.MediaDAO;
import entities.AppreciationDTO;
import entities.ApprecierDTO;
import entities.FilmDTO;
import entities.MediaDTO;
import java.awt.Color;
import java.sql.*;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author formation
 */
public class JIFApprecier extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFApprecier
     */
    protected String film, media, appreciation;

    public JIFApprecier() {
        initComponents();
        setVisible(true);

        Connection connexion = Connexion.seConnecter("localhost", "3306", "root", "", "cinescope2014");

        FilmDAO pathFilm = new FilmDAO(connexion);
        MediaDAO pathMedia = new MediaDAO(connexion);
        AppreciationDAO pathAppreciation = new AppreciationDAO(connexion);

        /**
         * ***********************************
         */
        //chargement de la JTableApprecier avec les données deja enregistrées dans la BD
        ApprecierDAO apprecierDAO = new ApprecierDAO();
        DefaultTableModel ldtm = (DefaultTableModel) TableApprecier.getModel();

        try {
            System.out.println("************* Apprecier crud *********************");
            List<ApprecierDTO> liste = apprecierDAO.selectAllFromApprecier();
            Object[] tLigne;

            for (int i = 0; i < liste.size(); i++) {
                ApprecierDTO apprecier = liste.get(i);

                tLigne = new Object[3];
                tLigne[0] = apprecier.getNomFilmApprecier();
                tLigne[1] = apprecier.getNomMediaApprecier();
                tLigne[2] = apprecier.getLibelleAppreciationApprecier();

                ldtm.addRow(tLigne);

                System.out.println("Jtable apprecier: " + tLigne[0] + " " + tLigne[1] + " " + tLigne[2]);

            }

        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
        /**
         * **********************************
         */
        //affectation de valeurs des combos
        try {
            Object[] tLigne;
            List<FilmDTO> mesFilms = pathFilm.selectFilmsDAO();
            List<MediaDTO> mesMedias = pathMedia.selectMediaDAO();
            List<AppreciationDTO> mesAppreciations = pathAppreciation.selectAppreciationDAO();

            for (int i = 0; i < mesFilms.size(); i++) {
                FilmDTO film = mesFilms.get(i);
                tLigne = new Object[1];
                tLigne[0] = film.getNomFilm();
                ComboBoxFilm.addItem(tLigne[0]);
            }

            for (int i = 0; i < mesMedias.size(); i++) {
                MediaDTO film = mesMedias.get(i);
                tLigne = new Object[1];
                tLigne[0] = film.getNomMedia();
                ComboBoxMedia.addItem(tLigne[0]);
            }

            for (int i = 0; i < mesAppreciations.size(); i++) {
                AppreciationDTO appreciation = mesAppreciations.get(i);
                tLigne = new Object[1];
                tLigne[0] = appreciation.getLibelleAppreciation();
                ComboBoxAppreciation.addItem(tLigne[0]);
            }

        } catch (Exception e) {
            System.err.println(e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonAjouter = new javax.swing.JButton();
        ButtonModifier = new javax.swing.JButton();
        ButtonSupprimer = new javax.swing.JButton();
        Film = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableApprecier = new javax.swing.JTable();
        ComboBoxFilm = new javax.swing.JComboBox();
        ComboBoxMedia = new javax.swing.JComboBox();
        ComboBoxAppreciation = new javax.swing.JComboBox();
        LabelMessage = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CRUD Apprécier");
        setVisible(true);

        ButtonAjouter.setText("Ajouter");
        ButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAjouterActionPerformed(evt);
            }
        });

        ButtonModifier.setText("Modifier");
        ButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonModifierActionPerformed(evt);
            }
        });

        ButtonSupprimer.setText("Supprimer");
        ButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSupprimerActionPerformed(evt);
            }
        });

        Film.setText("Film");

        jLabel2.setText("Media");

        jLabel3.setText("Appréciation");

        TableApprecier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Film", "Media", "Appréciation"
            }
        ));
        TableApprecier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableApprecierMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableApprecier);

        ComboBoxFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxFilmActionPerformed(evt);
            }
        });

        ComboBoxMedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxMediaActionPerformed(evt);
            }
        });

        ComboBoxAppreciation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxAppreciationActionPerformed(evt);
            }
        });

        LabelMessage.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Film)
                                    .addComponent(jLabel2)))
                            .addGap(70, 70, 70)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ComboBoxMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ComboBoxFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ComboBoxAppreciation, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(119, 119, 119)
                                .addComponent(ButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(ButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Film)
                    .addComponent(ComboBoxFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxMedia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ComboBoxAppreciation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonAjouter)
                    .addComponent(ButtonModifier)
                    .addComponent(ButtonSupprimer))
                .addGap(29, 29, 29)
                .addComponent(LabelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBoxFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxFilmActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ComboBoxFilmActionPerformed

    private void ButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAjouterActionPerformed
        // TODO add your handling code here:
        System.out.println("***********boutton Ajouter crud**********");
        DefaultTableModel jtableModel = (DefaultTableModel) TableApprecier.getModel();
        Object[] tLigne = new Object[3];
        int modelLigne = jtableModel.getRowCount();
        boolean appreciaitonFilmParCeMedia = false;

        //Test executé si JtableApprecier contient de lignes (affiche quelque chose)
        if (modelLigne > 0) {

            //boucle sur les lignes de la JtableApprecier
            for (int i = 0; i < modelLigne; i++) {
                //  System.out.println("boucle for");
                //verifie si le film qu'on souhaite ajouter n'est se trouve pas deja dans la JTableApprecier
                if (ComboBoxFilm.getSelectedItem().equals(TableApprecier.getValueAt(i, 0))) {
                    //System.out.println("film deja dans la liste");
                    //Verifie si le media qu'on souhaite ajouter n'a pas deja donné son appreciation
                    if (ComboBoxMedia.getSelectedItem().equals(TableApprecier.getValueAt(i, 1))) {
                        appreciaitonFilmParCeMedia = true;
                        LabelMessage.setText("vous avez déjà donné votre appréciation");
                         System.out.println("vous avez déjà donné votre appréciation");
                    }
                }
            }
        }
        if (appreciaitonFilmParCeMedia == false) {
            try {
                /*Preparation des valeurs à afficher dans la JTableApprecier*/
                //renitialisation du Labelmessage 
                LabelMessage.setText(" ");
                //  System.out.println("controler= 0");
                //Recuperation de valeurs des combos à ajouter à la JTableApprecier
                tLigne[0] = ComboBoxFilm.getSelectedItem().toString();
                tLigne[1] = ComboBoxMedia.getSelectedItem().toString();
                tLigne[2] = ComboBoxAppreciation.getSelectedItem().toString();
                //Ajout des valeurs à la JtableApprecier
                jtableModel.addRow(tLigne);

                //instanciation de l'objet apprecier avec les valeurs des combos ajoutées à la jTableApprecier
                ApprecierDAO apprecier = new ApprecierDAO(ComboBoxFilm.getSelectedItem().toString(), ComboBoxMedia.getSelectedItem().toString(),
                        ComboBoxAppreciation.getSelectedItem().toString());
                //appel de la methode ajouterApprecier() "pour l'ajout des valeurs des combos dans la BD grace à leurs PK"
                apprecier.ajouterApprecier();
            } catch (SQLException ex) {
                Logger.getLogger(JIFApprecier.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_ButtonAjouterActionPerformed

    private void ComboBoxMediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxMediaActionPerformed
        // TODO add your handling code here:  
    }//GEN-LAST:event_ComboBoxMediaActionPerformed

    private void ComboBoxAppreciationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxAppreciationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxAppreciationActionPerformed

    private void ButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSupprimerActionPerformed
        if (TableApprecier.getSelectedRow() >= 0) {
            try {
                System.out.println("****************************** Boutton Supprimer Crud  ************************************");
                LabelMessage.setText(" ");
                //System.out.println(TableApprecier.getSelectedRow());
                DefaultTableModel ldtm = (DefaultTableModel) TableApprecier.getModel();
                int ligne = TableApprecier.getSelectedRow();

                ApprecierDAO suppression = new ApprecierDAO(ldtm.getValueAt(ligne, 0).toString(), ldtm.getValueAt(ligne, 1).toString(), ldtm.getValueAt(ligne, 2).toString());
                //recuperation de l'index d'une ligne et suppression
                ldtm.removeRow(ligne);
                suppression.supprimerApprecier();
            } catch (SQLException ex) {
                Logger.getLogger(JIFApprecier.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ButtonSupprimerActionPerformed

    private void ButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonModifierActionPerformed
        // TODO add your handling code here:
        int ligne = TableApprecier.getSelectedRow();
        
        if (TableApprecier.getSelectedRow() >= 0) {
            try {
                System.out.println("************************** Boutton mdifier  *********************************");
                LabelMessage.setText(" ");
                /**
                 * Apres la selection de la ligne private void
                 * TableApprecierMouseClicked(java.awt.event.MouseEvent evt)
                 * affectation à la JTableAppricier de nouvelles valeurs des
                 * comboBox
                 */
                TableApprecier.setValueAt(ComboBoxFilm.getSelectedItem().toString(), TableApprecier.getSelectedRow(), 0);
                TableApprecier.setValueAt(ComboBoxMedia.getSelectedItem().toString(), TableApprecier.getSelectedRow(), 1);
                TableApprecier.setValueAt(ComboBoxAppreciation.getSelectedItem().toString(), TableApprecier.getSelectedRow(), 2);
                /**
                 * Recuperation des valeurs de la linge de la jTable
                 * "TableApprecier.getValueAt(ligne, 0).toString()" pour
                 * l'instanciation de l'objet modification de type ApprecierDAO
                 */
                ApprecierDAO modification = new ApprecierDAO(TableApprecier.getValueAt(ligne, 0).toString(), TableApprecier.getValueAt(ligne, 1).toString(),
                        TableApprecier.getValueAt(ligne, 2).toString());
                System.out.println("***** id modifié : " + modification.getIdMedia() + " " + modification.getIdFilm() + " " + modification.getIdAppreciation());

                //appel de la methode modifierApprecier() qui reçoit en param les noms des anciennes valeurs 
                modification.modifierApprecier(film, media, appreciation);
            } catch (SQLException ex) {
                Logger.getLogger(JIFApprecier.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_ButtonModifierActionPerformed

    private void TableApprecierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableApprecierMouseClicked
        // TODO add your handling code here:
        // TableApprecier.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        TableApprecier.setSelectionForeground(Color.BLUE);
        film = TableApprecier.getValueAt(TableApprecier.getSelectedRow(), 0).toString();
        media = TableApprecier.getValueAt(TableApprecier.getSelectedRow(), 1).toString();
        appreciation = TableApprecier.getValueAt(TableApprecier.getSelectedRow(), 2).toString();
        ComboBoxFilm.setSelectedItem(film);
        ComboBoxMedia.setSelectedItem(media);
        ComboBoxAppreciation.setSelectedItem(appreciation);


    }//GEN-LAST:event_TableApprecierMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAjouter;
    private javax.swing.JButton ButtonModifier;
    private javax.swing.JButton ButtonSupprimer;
    private javax.swing.JComboBox ComboBoxAppreciation;
    private javax.swing.JComboBox ComboBoxFilm;
    private javax.swing.JComboBox ComboBoxMedia;
    private javax.swing.JLabel Film;
    private javax.swing.JLabel LabelMessage;
    private javax.swing.JTable TableApprecier;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
